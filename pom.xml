<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.15</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.kawa.clients</groupId>
	<artifactId>clients-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>clients-api</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<start-class>com.kawa.clients.clientsapi.ClientsApiApplication</start-class>
		<java.version>17</java.version>
		<project.coverage.directory>${project.build.directory}/coverage</project.coverage.directory>
		<org.mapstruct.version>1.5.2.Final</org.mapstruct.version>

		<springdoc-openapi.version>1.6.12</springdoc-openapi.version>
		<openapi-generator-maven.version>6.2.1</openapi-generator-maven.version>

		<jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
		<sonar.coverage.jacoco.xmlReportPaths>${project.coverage.directory}/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
		<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- une fois utilisée dans la configuration des greffons failsafe et surefire,
        cette propriété force la JRE à utiliser, lors des tests, l'encodage qu'elle définit via la locale -->
		<argLine>-Duser.language=fr_FR.UTF-8 -Duser.region=FR -Dfile.encoding=UTF-8</argLine>

		<sonar.exclusions>
			**/test/**,
			**/test-classes/**,
			**/generated-sources/**,
			**/models/**/*,
			**/dto/**/*,
			**/temppackages/**
		</sonar.exclusions>
		<skip.unit.tests>false</skip.unit.tests>
	</properties>

	<profiles>

		<profile>
			<id>integration-test</id>
			<properties>
				<skip.unit.tests>true</skip.unit.tests>
			</properties>
		</profile>

		<!-- L'activation de ce profil provoque la génération de la javadoc du projet -->
		<profile>
			<id>with-javadoc-generation</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadoc</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<tags>
								<tag>
									<name>implNote</name>
									<placement>a</placement>
									<head>Note sur l'implémentation:</head>
								</tag>
								<tag>
									<name>implSpec</name>
									<placement>a</placement>
									<head>Comportement attendu de l'implémentation:</head>
								</tag>
							</tags>
						</configuration>
					</plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>${checkstyle-maven-plugin.version}</version>
                        <configuration>
                            <configLocation>checkstyle.xml</configLocation>
                            <skip>true</skip>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
				</plugins>
			</build>
		</profile>

	</profiles>


	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- SPRING BOOT -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<!-- ajoute une description de l'API à l'URL ${URL}/swagger-ui.html pour la phase de développement -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>${springdoc-openapi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-security</artifactId>
			<version>${springdoc-openapi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>0.2.3</version>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>1.19.6</version>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql </artifactId>
			<version>1.19.6</version>
		</dependency>

		<dependency>
			<groupId>me.paulschwarz</groupId>
			<artifactId>spring-dotenv</artifactId>
			<version>4.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.mockito</groupId>
					<artifactId>mockito-core</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<version>4.6.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.ehcache</groupId>
			<artifactId>ehcache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jcache</artifactId>
			<version>5.4.32.Final</version>
		</dependency>
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>4.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>2.2.224</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<version>2.7.5</version>
		</dependency>

		<dependency>
			<groupId>jakarta.xml.bind</groupId>
			<artifactId>jakarta.xml.bind-api</artifactId>
			<version>4.0.0</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>1.33</version>
		</dependency>

		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>5.7.1</version>
		</dependency>

		<dependency>
			<groupId>org.jetbrains</groupId>
			<artifactId>annotations</artifactId>
			<version>16.0.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-javadoc-plugin</artifactId>
			<version>3.5.0</version>
		</dependency>

		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>codegen-utils</artifactId>
			<version>5.0.0</version>
		</dependency>

<!--		<dependency>-->
<!--			<groupId>com.tngtech.archunit</groupId>-->
<!--			<artifactId>archunit-junit5</artifactId>-->
<!--			<version>1.1.0</version>-->
<!--			<scope>test</scope>-->
<!--		</dependency>-->

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>4.1.1</version>
		</dependency>

	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>${start-class}</mainClass>
					<excludeDevtools>false</excludeDevtools>
					<executable>true</executable>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- plugin d'exécution des tests unitaires -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<!-- force l'utilisation du bon encodage pour les tests (voir la propriété argLine plus haut) -->
					<argLine>@{argLine} ${argLine}</argLine>
					<skipTests>${skip.unit.tests}</skipTests>
					<trimStackTrace>false</trimStackTrace>
				</configuration>
			</plugin>

			<!-- plugin d'exécution des tests d'intégration-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<configuration>
					<!-- force l'utilisation du bon encodage pour les tests (voir la propriété argLine plus haut) -->
					<argLine>@{argLine} ${argLine}</argLine>
					<trimStackTrace>false</trimStackTrace>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!--Jacoco-->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>pre-unit-tests</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.coverage.directory}/jacoco-ut.exec</destFile>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.coverage.directory}/jacoco-ut.exec</dataFile>
							<outputDirectory>${project.coverage.directory}</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.coverage.directory}/jacoco-it.exec</destFile>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for integration tests after integration tests have been run. -->
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report-integration</goal>
						</goals>
						<configuration><!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.coverage.directory}/jacoco-it.exec</dataFile>
							<outputDirectory>${project.coverage.directory}</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>merge-unit-and-integration</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${project.coverage.directory}</directory>
									<includes>
										<include>jacoco-it.exec</include>
										<include>jacoco-ut.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${project.coverage.directory}/ut_it_merged.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>report</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.coverage.directory}/ut_it_merged.exec</dataFile>
							<outputDirectory>${project.coverage.directory}</outputDirectory>
						</configuration>
					</execution>

				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<parameters>true</parameters>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<!-- Mapstruct should follow the lombok path(s) -->
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<!-- génération automatique de code à partir du contrat d'API -->
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>${openapi-generator-maven.version}</version>
				<executions>
					<!-- génération du code backend -->
					<execution>
						<id>generate-backend-code</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/api/api.yml</inputSpec>
							<output>${project.build.directory}/generated-sources/java</output>
							<generatorName>spring</generatorName>
							<generateApis>true</generateApis>
							<generateApiDocumentation>false</generateApiDocumentation>
							<generateApiTests>false</generateApiTests>
							<generateModels>true</generateModels>
							<generateModelDocumentation>false</generateModelDocumentation>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>true</generateSupportingFiles>
							<supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
							<modelNameSuffix>Dto</modelNameSuffix>

							<apiPackage>com.kawa.clients.generated.api.server</apiPackage>
							<modelPackage>com.kawa.clients.generated.api.model</modelPackage>

							<!-- Correspondance entre types du contrat d'interface
                            et classes java dans le code autogénéré -->
							<typeMappings>
								<typeMapping>number=Double</typeMapping>
							</typeMappings>

							<!-- Répertoire où trouver les patrons de génération des classes java représentant
                            les entités. Permet d'ajouter des constructeurs dotés de paramètres. -->
							<templateDirectory>${project.basedir}/src/main/resources/classTemplates</templateDirectory>

							<configOptions>
								<useTags>true</useTags>
								<useBeanValidation>true</useBeanValidation>
								<performBeanValidation>true</performBeanValidation>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<!-- Ensemble de classes java utilisées pour la représentation des dates-->
								<dateLibrary>java8</dateLibrary>
								<!-- les contrôleurs générés lèvent une exception générique -->
								<unhandledException>true</unhandledException>
								<delegatePattern>true</delegatePattern>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
